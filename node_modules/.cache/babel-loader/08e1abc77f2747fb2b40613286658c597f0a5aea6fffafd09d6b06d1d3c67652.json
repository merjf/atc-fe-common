{"ast":null,"code":"const GATEWAY_URL = \"http://127.0.0.1:5001\";\nconst OBJECT_DETECTION_SERVICE_PREFIX = \"/atc-be-object-detection\";\nconst MONTECARO_SERVICE_PREFIX = \"/atc-be-montecarlo\";\nconst OBJECT_DETECTION_LOAD_DATASET = GATEWAY_URL + OBJECT_DETECTION_SERVICE_PREFIX + \"/load-dataset\";\nconst OBJECT_DETECTION_TEST_MODEL = GATEWAY_URL + OBJECT_DETECTION_SERVICE_PREFIX + \"/test-object-model\";\nconst MONTECARLO_DRAW_CARDS = GATEWAY_URL + MONTECARO_SERVICE_PREFIX + \"/draw-cards\";\nconst MONTECARLO_EVALUATION_REQUEST = GATEWAY_URL + MONTECARO_SERVICE_PREFIX + \"/montecarlo-evaluation\";\nconst MONTECARLO_SHUFFLE_DECK = GATEWAY_URL + MONTECARO_SERVICE_PREFIX + \"/shuffle-deck\";\nconst requestFileOptions = body => ({\n  method: 'POST',\n  body: body\n});\nconst requestPOSTWithBody = body => ({\n  method: 'POST',\n  headers: {\n    'Content-type': 'application/json; charset=UTF-8'\n  },\n  body: JSON.stringify(body)\n});\n\n// Object Detection Service APIs\n\nexport const fetchObjectDetectionLoadDataset = dataset => {\n  return fetch(OBJECT_DETECTION_LOAD_DATASET + \"?dataset=\" + dataset).then(response => response.json());\n};\nexport const fetchObjectModelTesting = image => {\n  const body = new FormData();\n  body.append(\"image\", image.value);\n  return fetch(OBJECT_DETECTION_TEST_MODEL, requestFileOptions(body)).then(response => response.json());\n};\n\n// Montecarlo Poker Simulation Service APIs\n\nexport const fetchDrawCards = (nPlayers, emptyTable) => {\n  return fetch(MONTECARLO_DRAW_CARDS + \"?nPlayers=\" + nPlayers + \"&emptyTable=\" + emptyTable).then(response => response.json());\n};\nexport const fetchShuffleDeck = () => {\n  return fetch(MONTECARLO_SHUFFLE_DECK).then(response => response.json());\n};\nexport const fetchMontecarloEvaluation = (gameCards, nsamples) => {\n  const body = {\n    ...gameCards,\n    nsamples: nsamples\n  };\n  return fetch(MONTECARLO_EVALUATION_REQUEST, requestPOSTWithBody(body)).then(response => response.json());\n};","map":{"version":3,"names":["GATEWAY_URL","OBJECT_DETECTION_SERVICE_PREFIX","MONTECARO_SERVICE_PREFIX","OBJECT_DETECTION_LOAD_DATASET","OBJECT_DETECTION_TEST_MODEL","MONTECARLO_DRAW_CARDS","MONTECARLO_EVALUATION_REQUEST","MONTECARLO_SHUFFLE_DECK","requestFileOptions","body","method","requestPOSTWithBody","headers","JSON","stringify","fetchObjectDetectionLoadDataset","dataset","fetch","then","response","json","fetchObjectModelTesting","image","FormData","append","value","fetchDrawCards","nPlayers","emptyTable","fetchShuffleDeck","fetchMontecarloEvaluation","gameCards","nsamples"],"sources":["/Users/merjf/Documents/Projects/accademic-tools-collector/atc-fe-common/src/services/APIService.ts"],"sourcesContent":["import { nPlayers } from \"../models/constants\";\r\nimport { GameCards, Image } from \"../models/types\";\r\n\r\nconst GATEWAY_URL = \"http://127.0.0.1:5001\"\r\nconst OBJECT_DETECTION_SERVICE_PREFIX = \"/atc-be-object-detection\"\r\nconst MONTECARO_SERVICE_PREFIX = \"/atc-be-montecarlo\"\r\n\r\nconst OBJECT_DETECTION_LOAD_DATASET = GATEWAY_URL + OBJECT_DETECTION_SERVICE_PREFIX + \"/load-dataset\"\r\nconst OBJECT_DETECTION_TEST_MODEL = GATEWAY_URL + OBJECT_DETECTION_SERVICE_PREFIX + \"/test-object-model\"\r\n\r\nconst MONTECARLO_DRAW_CARDS = GATEWAY_URL + MONTECARO_SERVICE_PREFIX + \"/draw-cards\"\r\nconst MONTECARLO_EVALUATION_REQUEST = GATEWAY_URL + MONTECARO_SERVICE_PREFIX + \"/montecarlo-evaluation\"\r\nconst MONTECARLO_SHUFFLE_DECK = GATEWAY_URL + MONTECARO_SERVICE_PREFIX + \"/shuffle-deck\"\r\n\r\nconst requestFileOptions = (body: any) => ({\r\n  method: 'POST',\r\n  body: body\r\n});\r\n\r\nconst requestPOSTWithBody = (body: any) => ({\r\n  method: 'POST',\r\n  headers: {\r\n    'Content-type': 'application/json; charset=UTF-8'\r\n  },\r\n  body: JSON.stringify(body)\r\n})\r\n\r\n// Object Detection Service APIs\r\n\r\nexport const fetchObjectDetectionLoadDataset = (dataset:string) => {\r\n  return fetch(OBJECT_DETECTION_LOAD_DATASET+\"?dataset=\"+dataset)\r\n    .then(response => response.json())\r\n}\r\n\r\nexport const fetchObjectModelTesting = (image : Image) => {\r\n  const body = new FormData();\r\n  body.append(\"image\", image.value);\r\n  return fetch(OBJECT_DETECTION_TEST_MODEL, requestFileOptions(body))\r\n    .then(response => response.json())\r\n}\r\n\r\n// Montecarlo Poker Simulation Service APIs\r\n\r\nexport const fetchDrawCards = (nPlayers:number, emptyTable:boolean) => {\r\n  return fetch(MONTECARLO_DRAW_CARDS+\"?nPlayers=\"+nPlayers+\"&emptyTable=\"+emptyTable)\r\n    .then(response => response.json())\r\n}\r\n\r\nexport const fetchShuffleDeck = () => {\r\n  return fetch(MONTECARLO_SHUFFLE_DECK)\r\n    .then(response => response.json())\r\n}\r\n\r\nexport const fetchMontecarloEvaluation = (gameCards : GameCards, nsamples: number) => {\r\n  const body = ({...gameCards, nsamples: nsamples})\r\n  return fetch(MONTECARLO_EVALUATION_REQUEST, requestPOSTWithBody(body))\r\n    .then(response => response.json())\r\n}"],"mappings":"AAGA,MAAMA,WAAW,GAAG,uBAAuB;AAC3C,MAAMC,+BAA+B,GAAG,0BAA0B;AAClE,MAAMC,wBAAwB,GAAG,oBAAoB;AAErD,MAAMC,6BAA6B,GAAGH,WAAW,GAAGC,+BAA+B,GAAG,eAAe;AACrG,MAAMG,2BAA2B,GAAGJ,WAAW,GAAGC,+BAA+B,GAAG,oBAAoB;AAExG,MAAMI,qBAAqB,GAAGL,WAAW,GAAGE,wBAAwB,GAAG,aAAa;AACpF,MAAMI,6BAA6B,GAAGN,WAAW,GAAGE,wBAAwB,GAAG,wBAAwB;AACvG,MAAMK,uBAAuB,GAAGP,WAAW,GAAGE,wBAAwB,GAAG,eAAe;AAExF,MAAMM,kBAAkB,GAAIC,IAAS,KAAM;EACzCC,MAAM,EAAE,MAAM;EACdD,IAAI,EAAEA;AACR,CAAC,CAAC;AAEF,MAAME,mBAAmB,GAAIF,IAAS,KAAM;EAC1CC,MAAM,EAAE,MAAM;EACdE,OAAO,EAAE;IACP,cAAc,EAAE;EAClB,CAAC;EACDH,IAAI,EAAEI,IAAI,CAACC,SAAS,CAACL,IAAI;AAC3B,CAAC,CAAC;;AAEF;;AAEA,OAAO,MAAMM,+BAA+B,GAAIC,OAAc,IAAK;EACjE,OAAOC,KAAK,CAACd,6BAA6B,GAAC,WAAW,GAACa,OAAO,CAAC,CAC5DE,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC;AACtC,CAAC;AAED,OAAO,MAAMC,uBAAuB,GAAIC,KAAa,IAAK;EACxD,MAAMb,IAAI,GAAG,IAAIc,QAAQ,CAAC,CAAC;EAC3Bd,IAAI,CAACe,MAAM,CAAC,OAAO,EAAEF,KAAK,CAACG,KAAK,CAAC;EACjC,OAAOR,KAAK,CAACb,2BAA2B,EAAEI,kBAAkB,CAACC,IAAI,CAAC,CAAC,CAChES,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC;AACtC,CAAC;;AAED;;AAEA,OAAO,MAAMM,cAAc,GAAGA,CAACC,QAAe,EAAEC,UAAkB,KAAK;EACrE,OAAOX,KAAK,CAACZ,qBAAqB,GAAC,YAAY,GAACsB,QAAQ,GAAC,cAAc,GAACC,UAAU,CAAC,CAChFV,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC;AACtC,CAAC;AAED,OAAO,MAAMS,gBAAgB,GAAGA,CAAA,KAAM;EACpC,OAAOZ,KAAK,CAACV,uBAAuB,CAAC,CAClCW,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC;AACtC,CAAC;AAED,OAAO,MAAMU,yBAAyB,GAAGA,CAACC,SAAqB,EAAEC,QAAgB,KAAK;EACpF,MAAMvB,IAAI,GAAI;IAAC,GAAGsB,SAAS;IAAEC,QAAQ,EAAEA;EAAQ,CAAE;EACjD,OAAOf,KAAK,CAACX,6BAA6B,EAAEK,mBAAmB,CAACF,IAAI,CAAC,CAAC,CACnES,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC;AACtC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}