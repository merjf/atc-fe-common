{"ast":null,"code":"var _jsxFileName = \"/Users/merjf/Documents/Projects/accademic-tools-collector/atc-fe-common/src/components/MontecarloPokerSimulation/BasicCard.tsx\",\n  _s = $RefreshSig$();\nimport { makeStyles } from \"@mui/styles\";\nimport Card from '@mui/material/Card';\nimport { useState } from \"react\";\nimport { Box, CardActionArea, CardContent, Typography } from \"@mui/material\";\nimport classnames from \"classnames\";\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  cardBox: {\n    position: \"absolute\",\n    zIndex: 1000,\n    top: 30,\n    right: 30\n  },\n  card: {\n    cursor: \"pointer\",\n    minWidth: 200,\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    border: \"1px solid #f5f5f5\",\n    boxShadow: \"-4px 4px 4px -4px grey !important\",\n    \"&:hover\": {\n      backgroundColor: \"#f3f3f3\"\n    },\n    \"& > .MuiCardActions-root\": {\n      minWidth: 200\n    }\n  },\n  cardContent: {},\n  cardActions: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    gap: 15\n  },\n  cardDetails: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"flex-start\",\n    width: \"85%\",\n    gap: 10\n  },\n  cardLoading: {\n    opacity: 0.3\n  },\n  divider: {\n    width: \"100%\",\n    margin: \"20px 0px !important\"\n  },\n  cardOpen: {\n    cursor: \"auto\",\n    minWidth: 450,\n    boxShadow: \"-2px 2px 2px -2px grey !important\",\n    \"&:hover\": {\n      backgroundColor: \"white\",\n      \"& > div > p, & > div > div\": {\n        color: \"text.primary !important\"\n      }\n    }\n  },\n  loadingButton: {\n    position: \"absolute\",\n    top: \"40%\",\n    left: \"40%\",\n    zIndex: 1202\n  }\n});\nconst BasicCard = props => {\n  _s();\n  const classes = useStyles();\n  const [cardOpen, setCardOpen] = useState(false);\n  const [expandDatasetDetails, setExpandDatasetDetails] = useState(false);\n  const handleClose = () => {\n    props.setSettings();\n  };\n  const handleCloseCard = e => {\n    setCardOpen(!cardOpen);\n  };\n  const handleExpandClick = () => {\n    setExpandDatasetDetails(!expandDatasetDetails);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: classes.cardBox,\n    children: [!cardOpen && /*#__PURE__*/_jsxDEV(Card, {\n      className: classnames(classes.card, cardOpen ? classes.cardOpen : \"\"),\n      onClick: event => handleCloseCard(event),\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            fontSize: 15\n          },\n          color: \"text.secondary\",\n          gutterBottom: true,\n          children: [/*#__PURE__*/_jsxDEV(SettingsIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 29\n          }, this), \"Settings\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }, this), cardOpen && /*#__PURE__*/_jsxDEV(Card, {\n      className: classnames(classes.card, classes.cardOpen),\n      children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n        onClick: handleCloseCard,\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          className: classes.cardContent,\n          children: \"Set samples and players\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n};\n_s(BasicCard, \"xUV1Qp2qSg4e3fQ6eSxDqZsOgWM=\", false, function () {\n  return [useStyles];\n});\n_c = BasicCard;\nexport default BasicCard;\nvar _c;\n$RefreshReg$(_c, \"BasicCard\");","map":{"version":3,"names":["makeStyles","Card","useState","Box","CardActionArea","CardContent","Typography","classnames","SettingsIcon","jsxDEV","_jsxDEV","useStyles","cardBox","position","zIndex","top","right","card","cursor","minWidth","display","flexDirection","alignItems","justifyContent","border","boxShadow","backgroundColor","cardContent","cardActions","gap","cardDetails","width","cardLoading","opacity","divider","margin","cardOpen","color","loadingButton","left","BasicCard","props","_s","classes","setCardOpen","expandDatasetDetails","setExpandDatasetDetails","handleClose","setSettings","handleCloseCard","e","handleExpandClick","className","children","onClick","event","sx","fontSize","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/merjf/Documents/Projects/accademic-tools-collector/atc-fe-common/src/components/MontecarloPokerSimulation/BasicCard.tsx"],"sourcesContent":["import { makeStyles } from \"@mui/styles\";\nimport Card from '@mui/material/Card';\nimport { useState } from \"react\";\nimport { Box, CardActionArea, CardContent, CardMedia, Typography } from \"@mui/material\";\nimport classnames from \"classnames\";\nimport SettingsIcon from '@mui/icons-material/Settings';\n\nconst useStyles = makeStyles({\n    cardBox:{\n        position: \"absolute\",\n        zIndex: 1000,\n        top: 30,\n        right: 30,\n    },\n    card: {\n        cursor: \"pointer\",\n        minWidth: 200,\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        border: \"1px solid #f5f5f5\",\n        boxShadow: \"-4px 4px 4px -4px grey !important\",\n        \"&:hover\":{\n            backgroundColor: \"#f3f3f3\",\n        },\n        \"& > .MuiCardActions-root\":{\n            minWidth: 200,\n        }\n    },\n    cardContent: {\n    },\n    cardActions:{\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        gap: 15\n    },\n    cardDetails:{\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"flex-start\",\n        width: \"85%\",\n        gap: 10\n    },\n    cardLoading:{\n        opacity: 0.3\n    },\n    divider: {\n        width: \"100%\",\n        margin: \"20px 0px !important\"\n    },\n    cardOpen:{\n        cursor: \"auto\",\n        minWidth: 450,\n        boxShadow: \"-2px 2px 2px -2px grey !important\",\n        \"&:hover\":{\n            backgroundColor: \"white\",\n            \"& > div > p, & > div > div\":{\n                color: \"text.primary !important\"\n            }\n        }\n    },\n    loadingButton:{\n        position: \"absolute\",\n        top: \"40%\",\n        left: \"40%\",\n        zIndex: 1202\n    }\n})\n\ninterface CardProps{\n    setSettings: Function\n}\n\nconst BasicCard = (props: CardProps) => {\n    const classes = useStyles();\n\n    const [cardOpen, setCardOpen] = useState(false);\n    const [expandDatasetDetails, setExpandDatasetDetails] = useState(false);\n\n    const handleClose = () => {\n        props.setSettings()\n    };\n\n    const handleCloseCard = (e:any) => {\n        setCardOpen(!cardOpen)\n    }\n\n    const handleExpandClick = () => {\n        setExpandDatasetDetails(!expandDatasetDetails);\n    };\n\n\n    return (\n        <Box className={classes.cardBox}>\n            {!cardOpen &&\n                <Card className={classnames(classes.card, cardOpen ? classes.cardOpen : \"\")} onClick={(event) => handleCloseCard(event)}>\n                    <CardContent>\n                        <Typography sx={{ fontSize: 15 }} color=\"text.secondary\" gutterBottom>\n                            <SettingsIcon />  \n                            Settings\n                        </Typography>\n                    </CardContent>\n                </Card>\n            }\n            {cardOpen && \n                <Card className={classnames(classes.card, classes.cardOpen)}>\n                    <CardActionArea onClick={handleCloseCard}>\n                        <CardContent className={classes.cardContent}>\n                            Set samples and players\n                        </CardContent>\n                    </CardActionArea>\n                </Card>\n            }\n        </Box>\n    )\n}\n\nexport default BasicCard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}